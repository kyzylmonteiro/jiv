{"version":3,"sources":["Box.js","SketchBox.js","DraggableSection.js","InfSpace.js","App.js","index.js"],"names":["Box","className","contenteditable","React","Component","SketchBox","props","_selectTool","event","setState","tool","target","value","enableRemoveSelected","Tools","Select","enableCopyPaste","state","lineWidth","lineColor","fillColor","backgroundColor","shadowWidth","shadowOffset","Pencil","fillWithColor","fillWithBackgroundColor","drawings","canUndo","canRedo","controlledSize","sketchWidth","sketchHeight","stretched","stretchedX","stretchedY","originX","originY","expandTools","expandControls","expandColors","expandBack","expandImages","expandControlled","text","name","ref","c","_sketch","this","width","height","forceValue","onChange","_onSketchChange","Button","style","float","onClick","e","addImg","TextField","select","label","helperText","MenuItem","key","Line","DraggableSection","activeDrags","deltaPosition","x","y","controlledPosition","boxes","onAddBtnClick","onAddBtnClickSketch","handleDrag","ui","deltaX","deltaY","onStart","onStop","adjustXPos","preventDefault","stopPropagation","adjustYPos","onControlledDrag","position","onControlledDragStop","dragHandlers","handle","onDrag","paddingTop","size","color","padding","cursor","infSpace","sections","top","right","App","InfSpace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAUeA,E,uKANX,OAAQ,yBAAKC,UAAU,gBAAgBC,gBAAgB,QAA/C,0B,GAFMC,IAAMC,W,kCCwGTC,E,kDA/FT,WAAYC,GAAQ,IAAD,8BACrB,cAAMA,IAoCRC,YAAc,SAAAC,GACZ,EAAKC,SAAS,CACZC,KAAMF,EAAMG,OAAOC,MACnBC,qBAAsBL,EAAMG,OAAOC,QAAUE,QAAMC,OACnDC,gBAAiBR,EAAMG,OAAOC,QAAUE,QAAMC,UAtChD,EAAKE,MAAQ,CACXC,UAAW,GACXC,UAAW,QACXC,UAAW,UACXC,gBAAiB,cACjBC,YAAa,EACbC,aAAc,EACdb,KAAMI,QAAMU,OACZX,sBAAsB,EACtBY,eAAe,EACfC,yBAAyB,EACzBC,SAAU,GACVC,SAAS,EACTC,SAAS,EACTC,gBAAgB,EAChBC,YAAa,OACbC,aAAc,QACdC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,QAAS,OACTC,QAAS,MAETC,aAAa,EACbC,gBAAgB,EAChBC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,kBAAkB,EAClBC,KAAM,gBACN5B,iBAAiB,GAjCE,E,qDA6Cf,IAAD,OACL,OAAQ,yBAAKf,UAAU,iBAC3B,kBAAC,cAAD,CACc4C,KAAK,SACL5C,UAAU,cACV6C,IAAK,SAAAC,GAAC,OAAK,EAAKC,QAAUD,GAC1B5B,UAAW8B,KAAKhC,MAAME,UACtBD,UAAU,IACVE,UACE6B,KAAKhC,MAAMQ,cACPwB,KAAKhC,MAAMG,UACX,cAENC,gBACE4B,KAAKhC,MAAMS,wBACPuB,KAAKhC,MAAMI,gBACX,cAEN6B,MAAO,OACPC,OAAO,QACPC,YAAU,EACVC,SAAUJ,KAAKK,gBACf5C,KAAMuC,KAAKhC,MAAMP,OAIN,kBAAC6C,EAAA,EAAD,CACAC,MAAO,CAACC,MAAM,SACjBC,QAAS,SAACC,GACR,EAAKX,QAAQY,OAAO,mEAHnB,eAMzB,kBAACC,EAAA,EAAD,CACwBC,QAAQ,EACRC,MAAM,cACNnD,MAAOqC,KAAKhC,MAAMP,KAClB2C,SAAUJ,KAAK1C,YACfyD,WAAW,6BACX,kBAACC,EAAA,EAAD,CAAUrD,MAAOE,QAAMC,OAAQmD,IAAI,UAAnC,UACA,kBAACD,EAAA,EAAD,CAAUrD,MAAOE,QAAMU,OAAQ0C,IAAI,UAAnC,UACA,kBAACD,EAAA,EAAD,CAAUrD,MAAOE,QAAMqD,KAAMD,IAAI,QAAjC,c,GAvFA/D,IAAMC,W,gBC8FfgE,E,4MA5FTnD,MAAQ,CACVoD,YAAa,EACbC,cAAe,CACbC,EAAG,EAAGC,EAAG,GAEXC,mBAAoB,CAClBF,EAAG,IAAKC,EAAG,KAEbE,MAAQ,CACA,kBAAC,EAAD,Q,EAIRC,cAAgB,WAChB,EAAKlE,SAAS,CACZiE,MAAM,GAAD,mBAAM,EAAKzD,MAAMyD,OAAjB,CAAwB,kBAAC,EAAD,W,EAGjCE,oBAAuB,WACrB,EAAKnE,SAAS,CACZiE,MAAM,GAAD,mBAAM,EAAKzD,MAAMyD,OAAjB,CAAwB,kBAAC,EAAD,W,EAIjCG,WAAa,SAAClB,EAAGmB,GAAQ,IAAD,EACP,EAAK7D,MAAMqD,cAAnBC,EADe,EACfA,EAAGC,EADY,EACZA,EACV,EAAK/D,SAAS,CACZ6D,cAAe,CACbC,EAAGA,EAAIO,EAAGC,OACVP,EAAGA,EAAIM,EAAGE,W,EAKhBC,QAAU,WACR,EAAKxE,SAAS,CAAC4D,YAAa,EAAKpD,MAAMoD,YAAY,K,EAGrDa,OAAS,WACP,EAAKzE,SAAS,CAAC4D,YAAa,EAAKpD,MAAMoD,YAAY,K,EAIrDc,WAAa,SAACxB,GACZA,EAAEyB,iBACFzB,EAAE0B,kBAFgB,MAGH,EAAKpE,MAAMwD,mBAAnBF,EAHW,EAGXA,EAAGC,EAHQ,EAGRA,EACV,EAAK/D,SAAS,CAACgE,mBAAoB,CAACF,EAAGA,EAAI,GAAIC,Q,EAGjDc,WAAa,SAAC3B,GACZA,EAAEyB,iBACFzB,EAAE0B,kBAFgB,IAGXZ,EAAsB,EAAKxD,MAA3BwD,mBACAF,EAAQE,EAARF,EAAGC,EAAKC,EAALD,EACV,EAAK/D,SAAS,CAACgE,mBAAoB,CAACF,IAAGC,EAAGA,EAAI,O,EAGhDe,iBAAmB,SAAC5B,EAAG6B,GAAc,IAC5BjB,EAAQiB,EAARjB,EAAGC,EAAKgB,EAALhB,EACV,EAAK/D,SAAS,CAACgE,mBAAoB,CAACF,IAAGC,Q,EAGzCiB,qBAAuB,SAAC9B,EAAG6B,GACzB,EAAKD,iBAAiB5B,EAAG6B,GACzB,EAAKN,U,uDAKC,IAAMQ,EAAe,CAACT,QAAShC,KAAKgC,QAASC,OAAQjC,KAAKiC,QACzDT,EAAsBxB,KAAKhC,MAA3BwD,mBAGP,OACE,6BAEE,kBAAC,IAAD,eAAWkB,OAAO,SAASH,SAAUf,GAAwBiB,EAA7D,CAA2EE,OAAQ3C,KAAKsC,mBACtF,yBAAKtF,UAAU,qBACf,4BAAQA,UAAU,SAASC,gBAAgB,QAAO,mDAC/C+C,KAAKhC,MAAMyD,MACZ,yBAAKlB,MAAO,CAACC,MAAM,QAASoC,WAAW,SACvC,kBAAC,IAAD,CAAsBC,KAAK,QAAQC,MAAM,OAAOvC,MAAO,CAACwC,QAAQ,OAAQC,OAAO,UAAUvC,QAAST,KAAK0B,gBACvG,kBAAC,IAAD,CAAemB,KAAK,QAAQC,MAAM,OAAOvC,MAAO,CAACwC,QAAQ,OAAQC,OAAO,UAAUvC,QAAST,KAAK2B,8B,GApF7EzE,IAAMC,WCgBtB8F,E,4MArBXjF,MAAQ,CACJkF,SAAW,CACR,kBAAC,EAAD,Q,EAENxB,cAAgB,WACjB,EAAKlE,SAAS,CACZ0F,SAAS,GAAD,mBAAM,EAAKlF,MAAMkF,UAAjB,CAA2B,kBAAC,EAAD,W,uDAIrC,OACE,6BACA,mCACA,kBAAC5C,EAAA,EAAD,CAAQC,MAAO,CAAC4C,IAAI,EAAGC,MAAM,EAAG5C,MAAM,QAAS+B,SAAS,SAAU9B,QAAST,KAAK0B,eAAhF,eACG1B,KAAKhC,MAAMkF,c,GAfGhG,IAAMC,WCOdkG,MARf,WACE,OACE,yBAAKrG,UAAU,OACT,kBAACsG,EAAD,QCDVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b93e3ca1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Box extends React.Component {\r\nrender() {    \r\n    return (<div className=\"box no-cursor\" contenteditable=\"true\">\r\n    click to edit text\r\n          </div> );\r\n  }\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\n\r\nimport {SketchField, Tools} from 'react-sketch2';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass SketchBox extends React.Component {\r\n\r\n      constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lineWidth: 10,\r\n      lineColor: 'black',\r\n      fillColor: '#68CCCA',\r\n      backgroundColor: 'transparent',\r\n      shadowWidth: 0,\r\n      shadowOffset: 0,\r\n      tool: Tools.Pencil,\r\n      enableRemoveSelected: false,\r\n      fillWithColor: false,\r\n      fillWithBackgroundColor: false,\r\n      drawings: [],\r\n      canUndo: false,\r\n      canRedo: false,\r\n      controlledSize: false,\r\n      sketchWidth: '100%',\r\n      sketchHeight: '200px',\r\n      stretched: true,\r\n      stretchedX: false,\r\n      stretchedY: false,\r\n      originX: 'left',\r\n      originY: 'top',\r\n    //   imageUrl: 'https://files.gamebanana.com/img/ico/sprays/4ea2f4dad8d6f.png',\r\n      expandTools: false,\r\n      expandControls: false,\r\n      expandColors: false,\r\n      expandBack: false,\r\n      expandImages: false,\r\n      expandControlled: false,\r\n      text: 'a text, cool!',\r\n      enableCopyPaste: false,\r\n    };\r\n  }\r\n\r\n  _selectTool = event => {\r\n    this.setState({\r\n      tool: event.target.value,\r\n      enableRemoveSelected: event.target.value === Tools.Select,\r\n      enableCopyPaste: event.target.value === Tools.Select\r\n    });\r\n  };\r\n\r\nrender() {    \r\n    return (<div className=\"box no-cursor\">\r\n<SketchField\r\n              name=\"sketch\"\r\n              className=\"canvas-area\"\r\n              ref={c => (this._sketch = c)}\r\n              lineColor={this.state.lineColor}\r\n              lineWidth=\"2\"\r\n              fillColor={\r\n                this.state.fillWithColor\r\n                  ? this.state.fillColor\r\n                  : 'transparent'\r\n              }\r\n              backgroundColor={\r\n                this.state.fillWithBackgroundColor\r\n                  ? this.state.backgroundColor\r\n                  : 'transparent'\r\n              }\r\n              width= \"100%\"\r\n              height=\"200px\"\r\n              forceValue\r\n              onChange={this._onSketchChange}\r\n              tool={this.state.tool}\r\n            />\r\n\r\n\r\n                         <Button\r\n                         style={{float:\"right\"}}\r\n                      onClick={(e) => {\r\n                        this._sketch.addImg(\"https://files.gamebanana.com/img/ico/sprays/4ea2f4dad8d6f.png\")\r\n                      }}> Add Image </Button>\r\n\r\n<TextField\r\n                        select={true}\r\n                        label=\"Canvas Tool\"\r\n                        value={this.state.tool}\r\n                        onChange={this._selectTool}\r\n                        helperText=\"Please select Canvas Tool\">\r\n                        <MenuItem value={Tools.Select} key=\"Select\">Select</MenuItem>\r\n                        <MenuItem value={Tools.Pencil} key=\"Pencil\">Pencil</MenuItem>\r\n                        <MenuItem value={Tools.Line} key=\"Line\">Line</MenuItem>\r\n                        {/* <MenuItem value={Tools.Arrow} key=\"Arrow\">Arrow</MenuItem>\r\n                        <MenuItem value={Tools.Rectangle} key=\"Rectangle\">Rectangle</MenuItem>\r\n                        <MenuItem value={Tools.Circle} key=\"Circle\">Circle</MenuItem>\r\n                        <MenuItem value={Tools.Pan} key=\"Pan\">Pan</MenuItem> */}\r\n                      </TextField>\r\n          </div> );\r\n  }\r\n}\r\n\r\nexport default SketchBox;","import React from 'react';\r\nimport Draggable from 'react-draggable'; // The default\r\nimport Box from './Box';\r\nimport SketchBox from './SketchBox';\r\nimport {BsFillPlusSquareFill} from \"react-icons/bs\"\r\nimport { GiPencilBrush } from \"react-icons/gi\";\r\n\r\n// import {DraggableCore} from 'react-draggable'; // <DraggableCore>\r\n\r\n\r\nclass DraggableSection extends React.Component {\r\n      state = {\r\n    activeDrags: 0,\r\n    deltaPosition: {\r\n      x: 0, y: 0\r\n    },\r\n    controlledPosition: {\r\n      x: 100, y: 100\r\n    },\r\n    boxes : [\r\n            <Box />]\r\n  };\r\n\r\n\r\n    onAddBtnClick = () => {\r\n    this.setState({\r\n      boxes: [...this.state.boxes, <Box />]\r\n    })\r\n  };\r\n  onAddBtnClickSketch  = () => {\r\n    this.setState({\r\n      boxes: [...this.state.boxes, <SketchBox />]\r\n    })\r\n  };\r\n\r\n  handleDrag = (e, ui) => {\r\n    const {x, y} = this.state.deltaPosition;\r\n    this.setState({\r\n      deltaPosition: {\r\n        x: x + ui.deltaX,\r\n        y: y + ui.deltaY,\r\n      }\r\n    });\r\n  };\r\n\r\n  onStart = () => {\r\n    this.setState({activeDrags: this.state.activeDrags+1});\r\n  };\r\n\r\n  onStop = () => {\r\n    this.setState({activeDrags: this.state.activeDrags-1});\r\n  };\r\n\r\n  // For controlled component\r\n  adjustXPos = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {x, y} = this.state.controlledPosition;\r\n    this.setState({controlledPosition: {x: x - 10, y}});\r\n  };\r\n\r\n  adjustYPos = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const {controlledPosition} = this.state;\r\n    const {x, y} = controlledPosition;\r\n    this.setState({controlledPosition: {x, y: y - 10}});\r\n  };\r\n\r\n  onControlledDrag = (e, position) => {\r\n    const {x, y} = position;\r\n    this.setState({controlledPosition: {x, y}});\r\n  };\r\n\r\n  onControlledDragStop = (e, position) => {\r\n    this.onControlledDrag(e, position);\r\n    this.onStop();\r\n  };\r\n\r\n\r\n  render() {\r\n          const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\r\n    const {controlledPosition} = this.state;\r\n\r\n    \r\n    return (\r\n      <div>\r\n\r\n        <Draggable handle=\"strong\" position={controlledPosition} {...dragHandlers} onDrag={this.onControlledDrag}>\r\n          <div className=\"boxHead no-cursor\">\r\n          <strong className=\"cursor\" contenteditable=\"true\"><div>Click and Drag me</div></strong>\r\n            {this.state.boxes}\r\n            <div style={{float:\"right\", paddingTop:\"10px\"}} >\r\n            <BsFillPlusSquareFill size=\"1.5em\" color=\"grey\" style={{padding:\"3px\"}} cursor=\"pointer\" onClick={this.onAddBtnClick}/>\r\n            <GiPencilBrush size=\"1.5em\" color=\"grey\" style={{padding:\"3px\"}} cursor=\"pointer\" onClick={this.onAddBtnClickSketch}/>\r\n            </div>\r\n        </div>\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableSection;\r\n// ReactDOM.render(\r\n//   <HelloMessage name=\"Taylor\" />,\r\n//   document.getElementById('hello-example')\r\n// )","import React from 'react';\r\nimport DraggableSection from './DraggableSection'; // <DraggableCore>\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass infSpace extends React.Component {\r\n    state = {\r\n        sections : [\r\n           <DraggableSection />]\r\n    }\r\n     onAddBtnClick = () => {\r\n    this.setState({\r\n      sections: [...this.state.sections, <DraggableSection />]\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>      \r\n      <h1>Jiv</h1>\r\n      <Button style={{top:0, right:0, float:\"right\", position:\"fixed\"}} onClick={this.onAddBtnClick} >Add Section</Button>\r\n        {this.state.sections}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default infSpace;\r\n// ReactDOM.render(\r\n//   <HelloMessage name=\"Taylor\" />,\r\n//   document.getElementById('hello-example')\r\n// )","import React from 'react';\nimport InfSpace from './InfSpace';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n          <InfSpace />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}